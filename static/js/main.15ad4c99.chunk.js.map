{"version":3,"sources":["serviceWorker.js","components/cross/Cross.js","components/App.js","components/todos/FilterLink.js","components/todos/Footer.js","components/todos/AddTodo.js","components/todos/VisibleTodoList.js","components/todos/UndoRedo.js","components/todos/Todos.js","components/todos/rootReducer.js","index.js"],"names":["Boolean","window","location","hostname","match","Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","App","connect","ownProps","active","filter","visibilityFilter","dispatch","type","children","disabled","style","marginLeft","VisibilityFilters","Footer","FilterLink","nextTodoTd","input","onSubmit","e","text","preventDefault","trim","id","ref","node","Todo","completed","textDecoration","getVisibleTodos","todos","t","Error","undoableTodos","present","toggleTodo","todo","UndoRedo","canUndo","canRedo","onUndo","onRedo","past","future","UndoActionCreators","undo","redo","Todos","VisibleTodoList","undoable","action","distinctState","combineReducers","ReactDOM","render","document","getElementById","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15ad4c99.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport \"./cross.css\";\r\nfunction Square(props) {\r\n    return (\r\n      <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }\r\n  \r\n  class Board extends React.Component {\r\n    renderSquare(i) {\r\n      return (\r\n        <Square\r\n          value={this.props.squares[i]}\r\n          onClick={() => this.props.onClick(i)}\r\n        />\r\n      );\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        history: [\r\n          {\r\n            squares: Array(9).fill(null)\r\n          }\r\n        ],\r\n        stepNumber: 0,\r\n        xIsNext: true\r\n      };\r\n    }\r\n  \r\n    handleClick(i) {\r\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice();\r\n      if (calculateWinner(squares) || squares[i]) {\r\n        return;\r\n      }\r\n      squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n      this.setState({\r\n        history: history.concat([\r\n          {\r\n            squares: squares\r\n          }\r\n        ]),\r\n        stepNumber: history.length,\r\n        xIsNext: !this.state.xIsNext\r\n      });\r\n    }\r\n  \r\n    jumpTo(step) {\r\n      this.setState({\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) === 0\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      const history = this.state.history;\r\n      const current = history[this.state.stepNumber];\r\n      const winner = calculateWinner(current.squares);\r\n  \r\n      const moves = history.map((step, move) => {\r\n        const desc = move ?\r\n          'Go to move #' + move :\r\n          'Go to game start';\r\n        return (\r\n            <li key={move}>\r\n              <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n            </li>\r\n\r\n          \r\n        );\r\n      });\r\n  \r\n      let status;\r\n      if (winner) {\r\n        status = \"Winner: \" + winner;\r\n      } else {\r\n        status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n      }\r\n  \r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board\r\n              squares={current.squares}\r\n              onClick={i => this.handleClick(i)}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  export default Game;","import React from 'react';\r\nimport Game from \"./cross/Cross\";\r\n\r\n\r\nclass App extends React.Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h3>井字棋</h3>\r\n                <Game></Game> \r\n            </div>           \r\n                \r\n        )\r\n    }\r\n}\r\nexport default App;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n//展示\r\nconst Link = ({ active, children, onClick }) => (\r\n    <button\r\n        onClick={onClick}\r\n        disabled={active}\r\n        style={{\r\n            marginLeft: '4px',\r\n        }}\r\n    >\r\n        {children}\r\n    </button>\r\n)\r\nLink.propTypes = {\r\n    active: PropTypes.bool.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n}\r\n//容器\r\nconst setVisibilityFilter = filter => ({\r\n    type: 'SET_VISIBILITY_FILTER',\r\n    filter\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    active: ownProps.filter === state.visibilityFilter\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Link)\r\n","import React from 'react'\r\nimport FilterLink from \"./FilterLink\";\r\n\r\nconst VisibilityFilters = {\r\n    SHOW_ALL: 'SHOW_ALL',\r\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}\r\n\r\nconst Footer = () => (\r\n    <div>\r\n        <span>Show: </span>\r\n        <FilterLink filter={VisibilityFilters.SHOW_ALL}>\r\n            All\r\n      </FilterLink>\r\n        <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>\r\n            Active\r\n      </FilterLink>\r\n        <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>\r\n            Completed\r\n      </FilterLink>\r\n    </div>\r\n)\r\n\r\nexport default Footer","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nlet nextTodoTd=0\r\nconst addTodo = text => ({\r\n    type: 'ADD_TODO',\r\n    id: nextTodoTd++,\r\n    text\r\n})\r\n\r\nconst AddTodo=({dispatch})=>{\r\n    let input\r\n    return (\r\n        <div>\r\n            <form onSubmit={e => {\r\n                e.preventDefault()\r\n                if (!input.value.trim()) {\r\n                    return\r\n                }\r\n                dispatch(addTodo(input.value))\r\n                input.value = ''\r\n            }}>\r\n                <input ref={node => input = node} />\r\n                <button type=\"submit\">\r\n                    Add Todo\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect()(AddTodo)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n//展示\r\nconst Todo = ({ onClick, completed, text }) => (\r\n    <li\r\n        onClick={onClick}\r\n        style={{\r\n            textDecoration: completed ? 'line-through' : 'none'\r\n        }}\r\n    >\r\n        {text}\r\n    </li>\r\n)\r\n\r\nTodo.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    text: PropTypes.string.isRequired\r\n}\r\n\r\nconst TodoList = ({ todos, toggleTodo }) => (\r\n    <ul>\r\n        {todos.map(todo =>\r\n            <Todo\r\n                key={todo.id}\r\n                {...todo}\r\n                onClick={() => toggleTodo(todo.id)}\r\n            />\r\n        )}\r\n    </ul>\r\n)\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        completed: PropTypes.bool.isRequired,\r\n        text: PropTypes.string.isRequired\r\n    }).isRequired).isRequired,\r\n    toggleTodo: PropTypes.func.isRequired\r\n}\r\n\r\n//容器\r\nconst toggleTodo = id => ({\r\n    type: 'TOGGLE_TODO',\r\n    id\r\n})\r\n\r\nconst VisibilityFilters = {\r\n    SHOW_ALL: 'SHOW_ALL',\r\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}\r\nconst getVisibleTodos = (todos, filter) => {\r\n    switch (filter) {\r\n        case VisibilityFilters.SHOW_ALL:\r\n            return todos\r\n        case VisibilityFilters.SHOW_COMPLETED:\r\n            return todos.filter(t => t.completed)\r\n        case VisibilityFilters.SHOW_ACTIVE:\r\n            return todos.filter(t => !t.completed)\r\n        default:\r\n            throw new Error('Unknown filter: ' + filter)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    todos: getVisibleTodos(state.undoableTodos.present, state.visibilityFilter)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleTodo: id => dispatch(toggleTodo(id))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TodoList)\r\n","import React from 'react'\r\nimport { ActionCreators as UndoActionCreators } from 'redux-undo'\r\nimport { connect } from 'react-redux'\r\n/* ... */\r\n\r\nlet UndoRedo = ({ canUndo, canRedo, onUndo, onRedo }) => (\r\n    <p>\r\n        <button onClick={onUndo} disabled={!canUndo}>\r\n            Undo\r\n    </button>\r\n        <button onClick={onRedo} disabled={!canRedo}>\r\n            Redo\r\n    </button>\r\n    </p>\r\n)\r\nconst mapStateToProps = state => {\r\n    return {\r\n        canUndo: state.undoableTodos.past.length > 0,\r\n        canRedo: state.undoableTodos.future.length > 0\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onUndo: () => dispatch(UndoActionCreators.undo()),\r\n        onRedo: () => dispatch(UndoActionCreators.redo())\r\n    }\r\n}\r\n\r\nUndoRedo = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UndoRedo)\r\n\r\nexport default UndoRedo","import React from 'react'\r\nimport Footer from './Footer'\r\nimport AddTodo from './AddTodo'\r\nimport VisibleTodoList from './VisibleTodoList'\r\nimport UndoRedo from \"./UndoRedo\";\r\n\r\nconst Todos = () => (\r\n  <div>\r\n      <h3>Todos</h3>\r\n    <AddTodo />\r\n    <VisibleTodoList />\r\n    <Footer />\r\n    <UndoRedo />\r\n  </div>\r\n)\r\n\r\nexport default Todos\r\n","import { combineReducers } from 'redux'\r\nimport undoable, { distinctState } from 'redux-undo'\r\n\r\nconst todos = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TODO':\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: action.id,\r\n                    text: action.text,\r\n                    completed: false\r\n                }\r\n            ]\r\n        case 'TOGGLE_TODO':\r\n            return state.map(todo =>\r\n                (todo.id === action.id)\r\n                    ? { ...todo, completed: !todo.completed }\r\n                    : todo\r\n            )\r\n        default:\r\n            return state\r\n    }\r\n}\r\nconst VisibilityFilters = {\r\n    SHOW_ALL: 'SHOW_ALL',\r\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}\r\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\r\n    switch (action.type) {\r\n        case 'SET_VISIBILITY_FILTER':\r\n            return action.filter\r\n        default:\r\n            return state\r\n    }\r\n}\r\nconst undoableTodos = undoable(todos, {\r\n    filter: distinctState()\r\n  })\r\nexport default combineReducers({\r\n    undoableTodos,\r\n    visibilityFilter\r\n})\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport { createStore } from 'redux';\r\nimport Todos from \"./components/todos/Todos\";\r\nimport { Provider } from 'react-redux'\r\nimport rootReducer from './components/todos/rootReducer'\r\n\r\nReactDOM.render(<App />, document.getElementById(\"cross\"));\r\n\r\n// const store = createStore(counter)\r\n// const render = () => ReactDOM.render(\r\n//   <Counter\r\n//     value={store.getState()}\r\n//     onIncrement={() => store.dispatch({ type: 'INCREMENT' })}\r\n//     onDecrement={() => store.dispatch({ type: 'DECREMENT' })}\r\n//   />,\r\n//   document.getElementById(\"counter\")\r\n// )\r\n// render()\r\n// store.subscribe(render)\r\n\r\nconst store = createStore(rootReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\nReactDOM.render(<Provider store={store}>\r\n  <Todos />\r\n</Provider>, document.getElementById(\"todos\"));\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}